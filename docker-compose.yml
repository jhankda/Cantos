version: '3.8'

services:

  app:
    build: 
      context: ./eCommerce
      dockerfile: Dockerfile
    container_name: "eCommerce"
    ports:
      - "5555:5555"
    volumes:
      - map-data:/app/map-data
      - ./eCommerce:/app
    networks:
        - cantos-network
    depends_on:
      redis:
        condition: service_started
    command: ["npm", "run", "dev"]
  
  dbworker:
    build: 
      context: ./DB-WORKER
      dockerfile: Dockerfile
    container_name: "DB-WORKER"
    volumes:
      - ./DB-WORKER:/app
      - /app/node_modules
    networks:
      - cantos-network
    depends_on:
      redis:
        condition: service_started
    command: ["npm", "run", "dev"]

  search-service:
    build:
      context: ./Search
    container_name: "search-service"
    ports:
      - "4444:4444"
    volumes:
      - ./Search:/app
    networks:
        - cantos-network
    depends_on:
      - app
    command: ["npm", "run", "dev"]
    restart: on-failure

  nginx2:
    build:
      context: ./nginx_reverse_proxy
    container_name: "Nginx_proxy"
    ports:
      - "80:80"
    volumes:
      - ./nginx_reverse_proxy:/app
    networks:
        - cantos-network
    depends_on:
        - search-service

  redis:
    image: "redis:6.0"
    container_name: "redis"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - cantos-network
      
volumes:
  eCommerce-mongo-data:  # Renamed to avoid duplication
  redis-data:
  map-data:
networks:
  cantos-network:
    driver: bridge
