version: '3.8'

services:

  app:
    build: 
      context: ./eCommerce
      dockerfile: Dockerfile
    container_name: "eCommerce"
    ports:
      - "5555:5555"
    volumes:
      - map-data:/app/map-data
      - ./eCommerce:/app
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["npm", "run", "dev"]
  
  dbworker:
    build: 
      context: ./DB-WORKER
      dockerfile: Dockerfile
    container_name: "DB-WORKER"
    volumes:
      - ./DB-WORKER:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["npm", "run", "dev"]

  search:
    build:
      context: ./Search
    container_name: "Search"
    ports:
      - 4444:4444
    volumes:
      - ./Search:/app
    depends_on:
      - app
    command: ["npm", "run", "dev"]
    restart: on-failure
     
  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - eCommerce-mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
      
  redis:
    image: "redis:6.0"
    container_name: "redis"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data    
      
volumes:
  eCommerce-mongo-data:  # Renamed to avoid duplication
  redis-data:
  map-data:

